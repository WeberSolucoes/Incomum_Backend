name: Deploy Django Backend

on:
  push:
    branches:
      - sprint  # branch de desenvolvimento
      - qa      # branch de staging
      - main    # branch de produção
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Versão do Python que você está usando

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write env file
        run: |
          if [ "${{ github.ref }}" == "refs/heads/sprint" ]; then
            echo "${{ secrets.ENV_DEV }}" > .env
          elif [ "${{ github.ref }}" == "refs/heads/qa" ]; then
            echo "${{ secrets.ENV_STAGE }}" > .env
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "${{ secrets.ENV_PROD }}" > .env
          fi
      - name: Set target directory
        run: |
          if [ "${{ github.ref }}" == "refs/heads/sprint" ]; then
            echo "TARGET=${{ secrets.REMOTE_TARGET_DEV }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/qa" ]; then
            echo "TARGET=${{ secrets.REMOTE_TARGET_STAGE }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "TARGET=${{ secrets.REMOTE_TARGET_PROD }}" >> $GITHUB_ENV
          fi
        
      - name: Deploy to VPS
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          ARGS: "-rltgoDzvc --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: ${{ env.TARGET }}
      - name: Restart Django Application
        run: |
          if [ "${{ github.ref }}" == "refs/heads/sprint" ]; then
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/github@hostinger ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST_IP }} "sudo systemctl restart viagemincomum-dev"
          elif [ "${{ github.ref }}" == "refs/heads/qa" ]; then
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/github@hostinger ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST_IP }} "sudo systemctl restart viagemincomum-stage"
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/github@hostinger ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST_IP }} "sudo systemctl restart viagemincomum-prod"
          fi
